import { log } from "console"

const sample = `...........
.....###.#.
.###.##..#.
..#.#...#..
....#.#....
.##..S####.
.##..#...#.
.......##..
.##.#.####.
.##..##.##.
...........`

const sample2 = `.##
.S#
...`

const puzzle = `...................................................................................................................................
..#..#.........................................##..........##.........#....#...#...#.#.....#..........#......#.......#....#........
............#...............#.................#.........#.#.........................#.......#................#.....................
.....##.....#..###.......####....#.......#..............................#.............#..........#.....#.#....#...#......#......#..
...#............#.....#...........#.........#.#.........#.....................................##............#...#....#..#....#.....
....#.......#.................#.....#.........##....................................##....#.....#........##...#............####....
..........#.#........#....#..........#.......#.....#............#................#..........#...#..........#....#.......#...#....#.
.........#.......#.......#....#...####.#.....................................#..##.....#................#.#.....#...........#......
....#.............#........#..#...#...............#.#..........#....#........#.............#.#.#.........#...#........#.........#..
...#....##........................#.............#..................##.............#.................#..#.......................#...
...........#......#....#...........#........................#.....................#.....#.....................#.............##.#...
...................#...........#..#...........#...#............#......#..........#.........###.#.##............#......#...#....#...
.#......#...#..#...#...#.#..................#..................#....................................#.#...#..#.....................
....#....#..............#.....#.......#........#....................................................##...#..................##.....
.........#.......................###....................#...#.........#................#.....##.............#......#.........#.....
......##....##...............#.........................#.#.#........#......##........#.................##.......#..#......#...#....
........#..........#..#.#....####.#..#.......................#..............#........#........#....#..............#....#......#....
..............#...#.....#....##..........................##............#......#..........#.....##..#.#......##..........#.....#....
...#......#....##.....#......#.......#.......................#..#.............................#.......#...#....................#...
.........................#..#..#..................#.............................#..............................##.......#...#.#....
................#....#..#...........###.....................#.........#......##...........#...............#....##.#...###.##.......
...#.#.........#.......................##.............#..#...........##....#....#..............#......#...................#........
...#.......#.##............#.##..#..................#.....#..#..........#............................#.........#......#............
....................#..............................#........#..#..#.....#....#.#...............#......#...#.....................#..
..#..##........#..#..#.....###......#..........................#...........##.......#................#............#...#........#...
..........#.##.#.......#.....#...#..........#............#..#..#........#....#.#.................#.................#...#........#..
.......#........#.............#....#............#............#.........##.....................................#....#...............
...#.#................#.#.#............................#.#..............#.#.....#.#.....#........##...............##....#........#.
....#...#.#.#..#...........................#...........#..............#........#.#..#.......................#.##.......#.......#...
.#....#..#...#...#...#.......#.............#........#......#.........#.#....#......#..............#................................
.....................#..##.....#...........#..........#...................#..#......#..............................#.......#.......
......#.#.#.##.......#.#.......................#...............#...#...........#......#..............#....#.............#..........
.#...................#....#..#........###...........#.............#.........#........#.##...#..........##..........................
..##....#....#..#.......#...............##.....#...#....###.#.............#.....#.............#..................##....#.#..##.#...
......#....##......#...#...#..........#................................................................#...#.......#............#..
..#...........#.....................##...........#...#....#...........#.........#....................................#..#........#.
...#...#.........................##.....##.#######.........#..#...#..#.......#..#.......#...#...............#.#.........##.........
......#.#....#.......#..................##....##......#.........#...#........#.....#.........##.................#.......#.......#..
..................................#......#..##........#......#....##....................#..................#.#...........#...#.....
..#.#......#...#.....#.........#...#...#.......#.#....................#......#...##.........#....#...............#..........#......
...........#....................#...........#......#....#.#...............#.#..#...##.........###.##............#.....#.#..........
.###.#.......................#.....#......#...#....#......##.#.#..#.#...........###...............#.................#..#..#........
..#...#....#.................#.#...#.................#.......#......#.#..#...#........##..##...#.....................#...#.....#...
..#.#....##.................#.#...#....#...........#..#.#...#..........##..................................................#...##..
..#......#.................#........#...#.........#.........#.#.....#...#.##.......#...............................#...............
........#.....#...............#....#........#.......##.....#...................#......#..............#..#.#.......#................
...........................#...##.......#............#.........#..#......#.........##..#.#..........####...#..........#............
...#...#.....#..............#......##.##........#......................#......#.#...#................#......#.........##...........
....#.....#..................#...............#.#...........#..#........#................#..#..#........#...........................
.....#.......................#......................#..........#..........#....#.#....#.........#......#....##..................#..
.####.........................#.#.......#.#..#..#.......#...#..#...##.##.......................#.###...........#..........#........
..........#..........#.#......................................#........#................#....#.##..##.....#..##....................
...................#.#....#...........................#...#..........#.......#..............#...........#.................#........
.......#........#.......#.....#...........#.........#........#.....##.......#.......#.................#...##..##...........#....##.
.....#....................#..............................##.....#......#.........................#...#...#......#..........#..#....
.#...#........#....#.....#.............#..#......##.....#.........................#..#....##......#....##..#.......................
.............#.....#......#....#.....................#.........#.........##....#........#..........#.......#...#...................
.............................###..................##......#..#...............#..#.............#...............#.....#............#.
.##.............#......#.........#...#....#...#.....#...###..#..#.#..#........#.#...#...#..#.#.....##.......##.....................
..#.........#.......#.......#............#..............#............#..##...##.......#............###.#....#.......#..............
..............#......#....#...#.....#......................#......#....#..........................#............#.....#..#........#.
.........#.....#.....................#...#...............###...........#...........##.#..#.#...#...#........#...#.....#............
..........#..#...#...#.#.........#............#..#..............#..#.......#.....#.#.........#..#..........#........#..............
.........#.#..........#.#.......#..#.....#......#.......##..#...#.#...#...#.....##.............#..#..........#.##...........#......
.........#............#.#........#........#.#..#..#..#.....................#.........#.#..........#......#....#......#....#........
.................................................................S.................................................................
......#......#............#....#....#....#.........##..#.............#......#....#......#.#......#...#.#.......#..##..#..#...#.....
.......#...........#......#......#................##....#..#..#...............#..##.........##...............#.........#...........
.......#........##...............#...........#..#...#..#.##............#..#..#.............#..............#........#....#..#.......
........#...#.......#.........##...................#...#..........#.....#.#.................#..##...........#.#........#.##........
............#.....#...........#.......##.#...#...........................................#.....#........#...#......................
.##..............#....#..#....#.#.#..#........#....................#.........#............#..........#......#.#....................
..........................#..........#..............##..#......#....###.#..................#.....#...........#.....................
....#.......###.............................#...............##.#....#.............#.#.....#....#...#.#.......#.....##.#............
..............#.#.......#........#.....#............##..........#...........##.......................#.......#...................#.
......#.........#..........##.....#...........................#.............................................#.....##........#......
....................#......#.............#.#.#..#.##..##..#....#....#...........#....#.#..................#......#..............##.
....#.................#...#......#...##...................#...............#.............................##......#..........#.......
........................#..#.#.........#.............#.......#..#...............#.....##...............###.....##............#.....
...#..#................#.#.....#...................#......##.............#.....................#...#.....#...................#.....
.#.......#............................#.......#......................#.......#.......#...#.#.......................................
....#.................#..#.....#.#.#...#.....#............#..............................##.....#.....#....#.............#.........
......#..#..........................#..#.##.........#.....#....#...............#.#...............#.#..................#............
.......#....#.........#.....#..#...#..............#..........#......................#.............#...................##..#..#.....
......#.#....##..........#..#......#........................#..............#..#...........#..#....#........#.........#....#.#......
....#..#...#.##.............#..#......#.....................#.......#....#.##..#..#..#...#.#.....#..#................###.....##..#.
...............#.............................##..##............#...#...#..#..#.....#.................##............#..#.......#....
.#......#.####....#............#......#.....#..........#...##.............#.......#..##.........#......................#.#.#....#..
.....#...#..........................#...........#..................##.##.#....#.#............#......#...........................#..
..................#............#....#.....#.................#.#.......#.................##.........#.##.......#....#.........#.....
.............###.#..#........#..#.........#.........................#.....#...#........#...#...#......................#..#.#....#..
.....#.###......#...#...............##..##.................#........#.........##...#....................................#..........
...#.#...#............#......................#...........#..............##....#......#....#.....................................#..
......#.....##...##...#.#..............#.....................#.#...#..............#......#.###...................#.................
..#.#................................#...........#............#.#.#........................#..#.#............#......#..........#...
...................#.#.................#..#......#..........#..#............#..............................###..#..........##......
...........#.........#................##...#..#...#.#..........#..#.........#..##.........................#...............#........
..............#.............#.......#........#..#.#..#.##.#.#...............##..........#..............#.................#.#.......
....#..##..#....#............................#....#...#...#.........#...#.#...............#..........#..........#.........##....#..
........#...#......##.........................#.###.#.............#...#............#....................#.....#...#..#......#...#..
..#...............##...................#......#....##...........#...#.........##......................#..........................#.
.......#........#.........#.............#.......#.........................#.....#.#...#..#....................#..#.....#......#....
.........#...#.......#........#.............#...........#.#..#..#...#......#..........#..#..............#...#.....#..........#.....
..#.........#......##.............................#.....##..#..................##.....##.............##...........#.###............
..#.###..#...........#...#...............................#........##..##......#...................#...#...................#........
.............#............#..#.....................#..#.#.....#....#.#..#............#...............#.#.....#......#..........##..
..................#.................#..........#.#.....#...........#.......#........##.......#..............#....#...#.............
.................#.##....##.#..#....#.#........#......#....................#.....#.#........#.................#..#.....#...........
..#..........#..........#.............#...........#...................#.........................#.#.........#........#......#......
...............#........#.........#...................#................#....................#..##.....#...#.#..#..........#....#...
.........#...........#.................#.#.................#....#.............#...........#.......#.............#..................
...............#................##..##..#...........#.....#...##........#..........................##.#...#.#...............#......
...................##.................##...........#........#...............................#..#........#..#...#....#............#.
.....##.............#.#.........#...........#...........#.#.....#.........##.........................#.............................
.##....#.............#.#.............................###..#..........#..................#................#..#......................
......................##........#......#...................#...#...#.......#...............#..............##.##...#..........#.#...
......#...#.......#.......................#.....................#.###..#..............#........#..#..##...#....#...................
....##.....#....................#.......##.#....#..........#......#...............#...##..............#.......#....#....#..........
.#...#...#.#..#.#.#.#..........#........#.......#...........#........#...........#....................##.............#........#....
................#...#.#.##.......#..#.....##..#...#................#................#..#........................................#..
.....#.#......#...........#..#.....#.#.#.#......#...........#.....#..................#..#.##...#........................##.....#.#.
............#...#.......#.#...#.........#......................#...#..................#..................##.........#.#..........#.
..#....#....##..................#...................................#...........##.###..#...#....#...............#............#.#..
.................##.........#.......#................#.......................#....#....#.....................#..#..................
..................#.........#.#..............................................................#....#............#...................
.............................#.#.#.#..............#.#...........#..........#........#.............#................#.......#....#..
.......................#..#.......#...#....................................##.#.##....#..........#......#....#............##.......
.............#.....#.#..#.#..##..##.........#.#.#..#.........................................#.....#.............#.##..............
..#.#.#.......#...................#.............###.............................................#..................................
.........#...###................#......#.......##.......###.............##....#.#.............#.........#.................#..#.#...
...................................................................................................................................`

const map: {
  [key: string]: [number, number, string]
} = {}

export default function Page() {
  const input = sample

  const stack: [number, number][] = []
  const visited = new Set<string>()

  let y = 0
  for (const row of input.split('\n')) {
    let x = 0
    for (const char of row) {
      map[[y, x].toString()] = [y, x, char]
      if (char === 'S') {
        stack.push([y, x])
      }
      x++
    }
    y++
  }

  const inputSize = [input.split('\n').length, input.split('\n')[0].length]
  log("Input size: ", inputSize)

  // let allowedStep = 100
  let allowedStep = 5000
  // let allowedStep = 6

  let step = 0

  let nextSteps = new Set<string>()
  nextSteps.add(stack[0].toString())

  function getRelative(y: number, x: number) {
    return [
      y > 0 ? y % inputSize[0] : (inputSize[0] - (-y % inputSize[0])) % inputSize[0],
      x > 0 ? x % inputSize[1] : (inputSize[1] - (-x % inputSize[1])) % inputSize[1],
    ]
  }

  log("relative test", getRelative(0, 0))

  // function traverse(y: number, x: number, ) {
  //   const [ry, rx] = getRelative(y, x)
  //   if (map[[ry, rx].toString()][2] === '#') return
  //   if (visited.has([ry, rx].toString())) return
  //   visited.add([ry, rx].toString())

  //   const possibilities = [[0, 1], [0, -1], [1, 0], [-1, 0]]
  //   for (const offset of possibilities) {
  //     const nextCoord = [y + offset[0], x + offset[1]]
  //     traverse(nextCoord[0], nextCoord[1])
  //     // nextSteps.add([y + offset[0], x + offset[1]].toString())
  //   }
  // }

  // Iteration 2

  let gardenTiles: number[][] = []


  while (step <= allowedStep) {

    // log("\n Step: ", step)

    const currSteps = Array.from(nextSteps)
    nextSteps = new Set<string>()
    // log(currSteps)

    // log(visited)


    while (currSteps.length) {
      const curr = currSteps.shift()!
      const currCoord = curr.split(',').map(e => parseInt(e))
      const [y, x] = currCoord
      const [ry, rx] = getRelative(currCoord[0], currCoord[1])
      const stringCoord = [ry, rx].toString()

      // log("Current relative position: ", getRelative(y, x), [y, x])

      if (map[stringCoord][2] === '#') {
        // log("Is rock")
        continue
      }


      if (visited.has(currCoord.toString())) {
        // isivisted
        // log("visited", currCoord)
        continue
      }
      // log("not visited", currCoord)
      visited.add(currCoord.toString())

      // log("Current Step: ", allowedStep, step)



      // Iteration 3 (max 1000)
      if (even(allowedStep) && even(step)) {
        // console.log("Even step")
        gardenTiles.push(currCoord)
      }
      if (odd(allowedStep) && odd(step)) {
        // console.log("Odd step")
        gardenTiles.push(currCoord)
      }

      // Iteration 2 (max 100)
      // if (step === allowedStep + 1) {
      //   if (map[getRelative(y, x).toString()][2] !== '#')
      //   gardenTiles++
      // }

      const possibilities = [[0, 1], [0, -1], [1, 0], [-1, 0]]
      for (const offset of possibilities) {
        const nextCoord = [y + offset[0], x + offset[1]]
        nextSteps.add(nextCoord.toString())
      }
    }

    // log("Garden Tiles")
    // log(gardenTiles)

    step++
  }

  // Iteration 1 - Part 1 ✅

  // while (stack.length) {
  //   const curr = stack.shift()!
  //   const [y, x, step] = curr

  //   if (map[[y, x].toString()][2] === '#') continue
  //   // log(stack)
  //   // if (visited.has([y, x].toString())) continue
  //   // visited.add([y, x].toString())
  //   // log(visited.size)
  //   // log("Visiting: ", y, x, "Current Step:", step)

  //   if (step >= 64) {
  //     gardenTiles++;
  //     continue
  //   };

  //   const possibilities = [[0, 1], [0, -1], [1, 0], [-1, 0]]

  //   for (const possible of possibilities) {
  //     if (!stack.find(e => e.toString() === [y + possible[0], x + possible[1], step + 1].toString())) {
  //       stack.push([y + possible[0], x + possible[1], step + 1])
  //     }
  //   }

  // }

  log("Garden Tiles: ", gardenTiles.length)  
}

function even(n: number) {
  return n % 2 === 0
}
function odd(n: number) {
  return Math.abs(n % 2) === 1
}